version: 2

# remote docker environment for one namespace. Appears to be faster
integrationRemoteOneNamespace: &integrationRemoteOneNamespace
  working_directory: /go/src/istio.io/installer
  docker:
    - image: istionightly/ci:2019-08-30
      environment:
        GOPATH: /go
        SKIP_CLEANUP: false
        ONE_NAMESPACE: 1
        TMPDIR: /go/tmp
        GOPROXY: https://proxy.golang.org

jobs:

  # Build all the templates, verify the templates work.
  build:
    working_directory: /go/src/istio.io/installer
    docker:
      # Image with KIND installed, based on Istio Kind node-image
      # Should have all tools we need, recreated when we rev the tool versions.
      - image: gcr.io/istio-testing/circleci:2019-04-22
        environment:
          GOPATH: /go
          TMPDIR: /go/tmp
          GOPROXY: https://proxy.golang.org

    # Can run multiple images, first is primary, all use localhost
    steps:
      - checkout
      - run:
          command: make run-build
          # TODO: make lint
      - store_artifacts:
          path: /go/out/

  # Old integration tests in same namespace - simple (mtls strict and permissive), bookinfo
  integration-old-kind:
    <<: *integrationRemoteOneNamespace

    # Can run multiple images, first is primary, all use localhost
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make gitdep
      - run:
          # Create KIND cluster (separate so we get time info)
          command: make info dep prepare
      - run:
          command: make sync
      - run:
          command: make docker-run-test TEST_TARGET="install-crds install-base install-ingress"
      - run:
          command: make docker-run-test TEST_TARGET="run-bookinfo"
      - run:
          command: make docker-run-test TEST_TARGET="run-simple"
      - run:
          command: make docker-run-test TEST_TARGET="run-simple-strict"
      - run:
          when: always
          command: make kind-logs
      - store_test_results:
          path: /go/out/tests
      - store_artifacts:
          path: /go/out/logs

  # Install the demo and bookinfo
  install-demo:
    <<: *integrationRemoteOneNamespace

    # Can run multiple images, first is primary, all use localhost
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make gitdep
      - run:
          # Create KIND cluster (separate so we get time info)
          command: make info dep prepare
      - run:
          command: make sync
      - run:
          command: make docker-run-test TEST_TARGET="run-test-demo"
      - run:
          when: always
          command: make kind-logs
      - store_test_results:
          path: /go/out/tests
      - store_artifacts:
          path: /go/out/logs

  # Verify a-la-carte with no certificates ( smallest possible install, and cases without certs/mtls)
  # KNative tests.
  noauth:
    <<: *integrationRemoteOneNamespace

    # Can run multiple images, first is primary, all use localhost
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            mkdir -p $GOPATH/tmp
            mkdir -p $GOPATH/src/istio.io/
            git clone https://github.com/istio/istio.git $GOPATH/src/istio.io/istio
            git clone https://github.com/istio/tools.git $GOPATH/src/istio.io/tools
      - run:
          command: make info dep prepare
      - run:
          command: make sync run-build
      - run:
          command: make docker-run-test TEST_TARGET="run-test-noauth-micro"
      - run:
          command: make docker-run-test TEST_TARGET="run-test-noauth-full"
      - run:
          command: make docker-run-test TEST_TARGET="run-test-knative"
      - run:
          when: always
          command: make kind-logs
      - store_test_results:
          path: /go/out/tests
      - store_artifacts:
          path: /go/out/logs

  # KNative standalone test.
  knative:
    <<: *integrationRemoteOneNamespace

    # Can run multiple images, first is primary, all use localhost
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            mkdir -p $GOPATH/tmp
            mkdir -p $GOPATH/src/istio.io/
            git clone https://github.com/istio/istio.git $GOPATH/src/istio.io/istio
            git clone https://github.com/istio/tools.git $GOPATH/src/istio.io/tools
      - run:
          command: make info dep prepare
      - run:
          command: make sync run-build
      - run:
          command: make docker-run-test TEST_TARGET="run-test-knative"
      - run:
          when: always
          command: make kind-logs
      - store_test_results:
          path: /go/out/tests
      - store_artifacts:
          path: /go/out/logs

  run-test-on-base-installation:
    <<: *integrationRemoteOneNamespace
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make gitdep
      - run:
          # Create KIND cluster (separate so we get time info)
          command: make info dep prepare
      - run:
          command: make sync
      - run:
          command: make kind-run TARGET="install-base ENABLE_NAMESPACES_BY_DEFAULT=false"
      - run:
          command: make docker-run-test TEST_TARGET="run-reachability-test ENABLE_NAMESPACES_BY_DEFAULT=false"
      - run:
          when: always
          command: make kind-logs
      - store_test_results:
          path: /go/out/tests
      - store_artifacts:
          path: /go/out/logs

workflows:
  version: 2
  nightly:
    triggers:
       - schedule:
           cron: "0 0,4,8,12,16,20 * * *"
           filters:
             branches:
               only:
                 - master
                 - dev
    jobs:
      - build
      - integration-old-kind
      - install-demo
      - noauth
      - knative
      - run-test-on-base-installation

  all:
    jobs:
      - build
      - integration-old-kind
      - install-demo
      - noauth
      - run-test-on-base-installation
